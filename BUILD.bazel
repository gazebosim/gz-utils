load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"])

exports_files(["LICENSE"])

PROJECT_NAME = "ignition-utils"

PROJECT_MAJOR = 1

PROJECT_MINOR = 2

PROJECT_PATCH = 0

ign_config_header(
    name = "config",
    src = "include/ignition/utils/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/utils/Export.hh",
    export_base = "IGNITION_UTILS",
    lib_name = "ignition-utils",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/ignition/utils/*.hh",
    "include/ignition/utils/detail/*.hh"
])

generate_include_header(
    name = "utilshh_genrule",
    out = "include/ignition/utils.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/utils/config.hh",
        "include/ignition/utils/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/utils/config.hh",
    "include/ignition/utils/Export.hh",
    "include/ignition/utils.hh",
]

cc_library(
    name = "ign_utils",
    hdrs = public_headers,
    includes = ["include"],
)

# Tests
cc_library(
    name = "implptr_test_classes",
    srcs = [
        "test/integration/implptr/implptr_test_classes.cc",
    ],
    hdrs = [
        "test/integration/implptr/implptr_test_classes.hh",
    ],
    includes = ["test/integration/implptr"],
    deps = ["ign_utils"],
)

cc_test(
    name = "ImplPtr_TEST",
    srcs = ["test/integration/implptr/ImplPtr_TEST.cc"],
    deps = [
        ":implptr_test_classes",
        "@gtest",
        "@gtest//:gtest_main",
    ]
)

